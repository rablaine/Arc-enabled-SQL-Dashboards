# This is a basic workflow to help you get started with Actions

name: Build and Verify Templates on Pull Request

# Controls when the workflow will run
on:
  # Triggers the workflow on tag creation to push out a release
  pull_request:
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    permissions:
      contents: write
      pull-requests: write
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: dev

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{  github.event.pull_request.head.sha }}

      - name: Make build script executable
        run: chmod +x .github/scripts/build_pr.sh
          
      # Zip the deployment for distribution
      - name: Run build script
        run: .github/scripts/build_pr.sh

      - uses: LanceMcCarthy/Action-AzureBlobUpload@v2
        name: Uploading to Azure storage...
        with:
          connection_string: ${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}
          container_name: dev
          source_folder: build/upload/

      - uses: azure/login@v2
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Template
        uses: azure/bicep-deploy@v2
        with:
            type: deployment
            operation: validate
            name: Development
            scope: resourceGroup
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            resource-group-name: ${{ secrets.AZURE_RESOURCE_GROUP }}
            template-file: build/deploy.json

      - name: Provide Template URL on PR
        uses: actions/github-script@v7
        with:
            script: |
                const prNumber = context.payload.pull_request.number;
                const output = process.env.output;
                github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: prNumber,
                    body: `${output}`
                });